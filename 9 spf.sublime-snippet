<snippet>
	<content><![CDATA[


const int maxN = 1e7 + 1, mod = 998244353;
 
int spf[maxN];
void smallestPrimeFactor() {
// it stores smallest prime factor of along long number less than maxN
    for (int i = 1; i < maxN; i++) spf[i] = i;
    for (int i = 2; i < maxN; i += 2) spf[i] = 2;
    for (int i = 3; i * i < maxN; i += 2) {
        if (spf[i] == i) {
            for (int j = i * i; j < maxN; j += i * 2) {
                if (spf[j] == j) spf[j] = i;
            }
        }
    }
}

vector<int> getFactorization(int x)
{
    vector<int> ret;
    while (x != 1)
    {
        ret.push_back(spf[x]);
        x = x / spf[x];
    }
    return ret;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>__spf</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
